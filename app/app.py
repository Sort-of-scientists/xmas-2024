import streamlit as st
import matplotlib.pyplot as plt
import pandas as pd
import os

from src.simulator import Simulator
from src.strategies import GreedyStrategy


def check_and_load_csv(file):
    """Check if the uploaded file is a CSV and load it."""
    if file is not None:
        _, ext = os.path.splitext(file.name)
        if ext.lower() == '.csv':
            try:
                return pd.read_csv(file)
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ CSV —Ñ–∞–π–ª–∞: {e}")
                return None
        else:
            st.error("–¢–æ–ª—å–∫–æ CSV —Ñ–∞–π–ª—ã —Ä–∞–∑—Ä–µ—à–µ–Ω—ã!")
            return None
    return None

def set_stage(stage):
    st.session_state.stage = stage


def download_file():
    letters_randoms = {
        'A': [1, 5],
        'B': [2, 6],
        'C': [3, 7],
    }

    pd.DataFrame(letters_randoms).to_csv("result.csv")

st.set_page_config(
    page_title="–°–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —É—á–µ–Ω—ã–µ",
    page_icon="üå∂Ô∏è",
    layout="wide",
    initial_sidebar_state="expanded",
)

payments, providers, exchange_rates = None, None, None


# Main Header
st.header("üìà –ü–ª–∞—Ç–µ–∂–Ω—ã–π –∫–æ–Ω–≤–µ–π–µ—Ä")
with st.container():
    with st.expander(label="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", icon="‚ùì"):
        st.markdown("""
        1. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
        2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ `.csv` —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ä–∞–∑–¥–µ–ª—ã.
        3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **–í—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é!**
        4. –°–∫–∞—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    """)


    strategy_type = st.selectbox(label="–í—ã–±–µ—Ä–∏—Ç–µ **—Å—Ç—Ä–∞—Ç–µ–≥–∏—é** –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏...", options=["–û–∂–∏–¥–∞–µ–º–æ–π –∫–æ–º–∏—Å—Å–∏–∏", "–û–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"])

    col1, col2, col3 = st.columns(3)

    with col1:
        st.subheader("üí± –û–±–º–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã")
        ex_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ **–æ–±–º–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã**", key="ex_rates", type=['csv'])
        if ex_file:
            with st.spinner("–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞..."):
                exchange_rates = check_and_load_csv(ex_file)
                if exchange_rates is not None:
                    st.dataframe(exchange_rates.head().style.format(), use_container_width=True)

    with col2:
        st.subheader("üí∏ –ü–ª–∞—Ç–µ–∂–∏")
        payments_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ **–ø–ª–∞—Ç–µ–∂–∏**", key="payments", type=['csv'])
        if payments_file:
            with st.spinner("–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞..."):
                payments = check_and_load_csv(payments_file)
                if payments is not None:
                    st.dataframe(payments.head().style.format(), use_container_width=True)

    with col3:
        st.subheader("üè¢ –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã")
        providers_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ **–ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤**", key="providers", type=['csv'])
        if providers_file:
            with st.spinner("–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞..."):
                providers = check_and_load_csv(providers_file)
                if providers is not None:
                    st.dataframe(providers.head().style.format(), use_container_width=True)

    if payments is not None and providers is not None and exchange_rates is not None:
        
        strategy = GreedyStrategy(by="processing_time" if strategy_type == "–û–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞" else "commission")

        simulator = Simulator(payments=payments, providers=providers, currencies=exchange_rates, strategy=strategy)

    if st.button("**–í—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é!**", use_container_width=True, on_click=set_stage, args=(1,)):
        
        with st.spinner("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ!"):
            history = simulator.simulate(verbose=True)        

        outputs = simulator._get_output_dataframe(history)
        metrics = simulator._compute_metrics(history)
        
        st.markdown(f"üò° –ò–∑–¥–µ—Ä–∂–∫–∏ —Å–æ—Å—Ç–∞–≤–∏–ª–∏: **{metrics['penalty']:.2f}$**")
        st.markdown(f"üòé 95% –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –º–µ–Ω—å—à–µ, —á–µ–º **{metrics['processing_time']['mean']:.2f} –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥!**")
        st.markdown(f"üò§ –ö–æ–Ω–≤–µ—Ä—Å–∏—è —Å–æ—Å—Ç–∞–≤–∏–ª–∞ **{metrics['conversion']:.2f}%**")

        st.download_button('–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç', outputs.to_csv().encode("utf-8"), "result.csv", "text/csv", use_container_width=True)